name: Update files with commit

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:
  version_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            README.md
          sparse-checkout-cone-mode: false
          fetch-tags: true
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: master

      - name: Capture version in README.md
        id: file
        run: |
          repo_name=$(basename "$GITHUB_REPOSITORY")
          cap=$(grep -oP "${repo_name}-\K\d\.\d\.\d[^\s]*" README.md)
          echo "version=$cap" >> "$GITHUB_OUTPUT"
          echo "repo_name=$repo_name" >> "$GITHUB_OUTPUT"

      - name: Capture version in latest tag
        id: tag
        run: echo "version=$(${{ github.ref_name }} | sed 's/^v//')" >> "$GITHUB_OUTPUT"

      - name: Substitute version in README.md
        id: sub
        if: ${{ steps.file.outputs.version < steps.tag.outputs.version }}
        run: sed -i 's/${{ steps.file.outputs.repo_name}}-${{ steps.file.outputs.version }}/${{ steps.file.outputs.repo_name}}-${{ steps.tag.outputs.version }}/g' README.md

      - name: Push changes
        if: steps.sub.conclusion == 'success'
        run: |
          git config author.name Cheng-Hung Tsai
          git config author.email chenghung.tsai@email.ucr.edu
          git config committer.name GitHub Actions
          git config committer.email actions@github.com
          git add README.md
          git commit -m "Update version in README.md"
          git tag --annotate ${{ steps.tag.outputs.version }} -m "Version bump to ${{ steps.tag.outputs.version }}" --force
          git push
          git push --tags --force

  publish_release:
    runs-on: ubuntu-latest
    needs: version_check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Release
        uses: docker://antonyurchenko/git-release:v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: build/*.zip
